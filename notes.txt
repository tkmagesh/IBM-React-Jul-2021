Magesh Kuppan

Methodology
    - No Powerpoint

Schedule:
    Commence    : 09:30 Hrs
    Tea Break   : 11:00 Hrs (20 mins)
    Lunch Break : 13:00 Hrs (1 Hr)
    Teach Break : 15:30 Hrs (20 mins)
    Wind up     : 17:30 Hrs

About You:
    Name
    Experience
    Primary Skillset
    Experience in any JavaScript framework (Backbone.js, Angular.js, React.js, etc)
    Any interesting book / tv show you watched recently


Testing / Redux
Webpack


RIA (Rich Internet Applications)

Salary Calculator
    1. Our implementation meets 100% functional requirements (No validations are needed).
    2. Reorganizing the code will be taken care by another team.

JSX 
    1. Every open tag must have a corresponding close tag
    2. Use 'htmlFor' instead of 'for'
    3. Use 'className' instead of 'class'

ES6 (ECMAScript 6/ES2015/ESNext)
    1. let
    2. const
    3. Array destructuring
    4. Rest operator (Array)
    5. Spread operator (Array)
    6. Object destructuring
    7. Rest operator (Object)
    8. Spread operator (Object)
    9. default arguments
    10. Arrow functions
    11. iterators
    12. template strings
    13. classes
    14. Modules (later)
    15. Promises (later)
    16. Async await (later)

    http://es6-features.org/

    Array Methods
        1. map
        2. filter
        3. reduce
        4. forEach


React Component
    = Encapsulation of state + UI behavior + presentation



    Class Components
        - Object has to be created in the memory
        - Life cycle event methods are invoked even when they are not implemented in the component class

    Functional Components
        - No objects are object (the given functions are just invoked)
        - How to pass to props? 
        - How to manage state?
            - using hooks
        - How to handle lifecycle events? 

    React Hook
        - is a function
        - hook function name must start with 'use'
        - builtin hooks
            - useState
            - useEffect
            - useRef
            - useReducer
            - useLayoutEffect
            - useMemo
            - useCallback
            - useContext
        
        - custom hooks
            one can create their own hooks
        

State
    UI State
        - used for presentation needs of the application
        - highly UNLIKELY that this data is needed in other parts of the application
        - Keep this in the component state 

    Application State
        - data needed for performing core application logic
        - highly LIKELY that this data is NEEDED in other parts of the application
        - Keep this OUTSIDE the component

        - Flex (archicture guideline from Facebook)

To install yarn
    npm install yarn -g

To create a react application
    yarn create react-app bug-tracker-app

To run the application
    cd bug-tracker-app
    yarn start

ES6 Modules
    - Anything defined in js file is considered 'private' to that file
    - public entities need to be explicitly 'exported'
    - public entities from other files have to be explicitly 'imported' to use

application organization
    src
        /bugs
            /actions
                addNew.js
                toggle.js
                .
                .
                index.js
            /components
                bug-edit.jsx
                bug-sort.jsx
                .
                .
            /reducers
                bugsReducer.js

            index.js (BugTracker component)
        /store
            index.js (create the store)

        index.js

To install redux
    yarn add redux


Assignments
    Implement the projects module
        (ONLY adding & listing of projects)
        project (id, name)

    Study about ES6 Promise
        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise


React-Redux
    yarn add react-redux
    
    Adapters for React & Redux
        - connect
            encapsulate the logic for extracting state and creating action dispatchers to be passed as props to the component

        - Provider


Redux Middleware
    Used when a common logic to be applied across all the actions
    

To run the json-server
    In the folder that has the db.json file
    npx json-server db.json -p 3030

to install axios in the application
    yarn add axios

yarn add redux-logger redux-thunk